// This file was automatically generated by godot-zig, please do not edit it.
const godot = @import("__import.zig");
const api = @import("../api.zig");
const c_api = @import("../c_api.zig");

// base class
const AcceptDialog = @import("accept_dialog.zig").AcceptDialog;

// method bindings
var mbind_get_cancel: ?*c_api.godot_method_bind = null;
var mbind_confirmation_dialog_constructor: ?fn () ?*c_api.godot_object = null;

pub const ConfirmationDialog = struct {
    const Self = @This();
    const BaseClass = AcceptDialog;

    base: *BaseClass,

    pub fn init() !*Self {
        if (mbind_confirmation_dialog_constructor == null) {
            mbind_confirmation_dialog_constructor = try api.createConstructor("ConfirmationDialog");
        }
        return api.createObject(Self, mbind_confirmation_dialog_constructor.?);
    }

    pub fn deinit(self: *Self) void {
        _ = api.core.?.godot_object_destroy.?(@ptrCast(*c_api.godot_object, self));
    }

    pub fn getCancel(self: *const Self) !godot.Button {
        if (mbind_get_cancel == null) {
            mbind_get_cancel = try api.createMethod("ConfirmationDialog", "get_cancel");
        }

        var result: ?*anyopaque = null;
        var cargs: ?*?*const anyopaque = null;

        const base = @ptrCast(*c_api.godot_object, @alignCast(@alignOf(*c_api.godot_object), self.base));
        _ = api.core.?.godot_method_bind_ptrcall.?(mbind_get_cancel, base, cargs, result);
        return @ptrCast(*godot.Button, @alignCast(@alignOf(&godot.Button), result)).*;
    }
};
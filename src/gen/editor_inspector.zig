// This file was automatically generated by godot-zig, please do not edit it.
const godot = @import("__import.zig");
const api = @import("../api.zig");
const c_api = @import("../c_api.zig");

// method bindings
var mbind_refresh: ?*c_api.godot_method_bind = null;
var mbind_editor_inspector_constructor: ?fn () ?*c_api.godot_object = null;

pub const EditorInspector = struct {
    const Self = @This();
    pub const BaseClass = godot.ScrollContainer;

    // Pointers to zero-sized types are also zero-sized,
    // therefore we need to add some data to make it not zero-sized :)
    _data: u8,
    base: *BaseClass,

    pub fn init() !*Self {
        if (mbind_editor_inspector_constructor == null) {
            mbind_editor_inspector_constructor = try api.createConstructor("EditorInspector");
        }
        return api.createObject(Self, mbind_editor_inspector_constructor.?);
    }

    pub fn deinit(self: *Self) void {
        _ = api.core.?.godot_object_destroy.?(@ptrCast(*c_api.godot_object, self));
    }

    pub fn refresh(self: *const Self) !void {
        if (mbind_refresh == null) {
            mbind_refresh = try api.createMethod("EditorInspector", "refresh");
        }

        var result: ?*anyopaque = null;
        var cargs: ?*?*const anyopaque = null;

        const base = @ptrCast(*c_api.godot_object, @alignCast(@alignOf(*c_api.godot_object), self.base));
        _ = api.core.?.godot_method_bind_ptrcall.?(mbind_refresh, base, cargs, result);
    }
};
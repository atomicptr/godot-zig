// This file was automatically generated by godot-zig, please do not edit it.
const godot = @import("__import.zig");
const api = @import("../api.zig");
const c_api = @import("../c_api.zig");

// method bindings
var mbind_generate: ?*c_api.godot_method_bind = null;
var mbind_phash_translation_constructor: ?fn () ?*c_api.godot_object = null;

pub const PHashTranslation = struct {
    const Self = @This();
    pub const BaseClass = godot.Translation;

    // Pointers to zero-sized types are also zero-sized,
    // therefore we need to add some data to make it not zero-sized :)
    _data: u8,
    base: *BaseClass,

    pub fn init() !*Self {
        if (mbind_phash_translation_constructor == null) {
            mbind_phash_translation_constructor = try api.createConstructor("PHashTranslation");
        }
        return api.createObject(Self, mbind_phash_translation_constructor.?);
    }

    pub fn deinit(self: *Self) void {
        _ = api.core.?.godot_object_destroy.?(@ptrCast(*c_api.godot_object, self));
    }

    pub fn generate(self: *const Self, arg_from: *const godot.Translation) !void {
        if (mbind_generate == null) {
            mbind_generate = try api.createMethod("PHashTranslation", "generate");
        }

        var result: ?*anyopaque = null;
        var args: [1]?*const anyopaque = []?*const anyopaque {
            @ptrCast(*const anyopaque, arg_from),
        };

        var cargs: ?*?*const anyopaque = &args[0];

        const base = @ptrCast(*c_api.godot_object, @alignCast(@alignOf(*c_api.godot_object), self.base));
        _ = api.core.?.godot_method_bind_ptrcall.?(mbind_generate, base, cargs, result);
    }
};